#!/bin/bash

# aliases/functions/environment variables for VMware

# vmrun; start/stop VMs
export VMWARE_LIB_DIR="/Applications/VMware\ Fusion.app/Contents/Library"
alias vmrun="${VMWARE_LIB_DIR}/vmrun"
alias ovftool="${VMWARE_LIB_DIR}/VMware\ OVF\ Tool/ovftool"

# function that actually runs 'vmnet-cli'
function _vmnet_run_cmd {
   local VMNET_ARG="$1"
   echo "-> Running 'vmnet-cli $1';"
   echo "-> Enter SUDO password if prompted for 'vmnet-cli' command;"
   sudo ${VMWARE_LIB_DIR}/vmnet-bin $VMNET_ARG
   local EXIT_STATUS=$?
   return $EXIT_STATUS
}

# shortcut to work with VMware's networking daemon
function vmnet {
   local VMNET_OPTIONS="start|stop|reload|restart|status|help"
   local VMNET_USAGE="Usage: vmnet [${VMNET_OPTIONS}]"

   if [ $# -eq 0 ]; then
      echo "ERROR: 'vmnet' requires an argument"
      echo $VMNET_USAGE
      return 1
   fi

   if [ $(echo $1 | egrep -c "${VMNET_OPTIONS}") -eq 0 ]; then
      echo "ERROR: '$1' is not a valid argument"
      echo $VMNET_USAGE
      return 1
   fi

   # choose which command to run
   if [ $1 == "start" ]; then
      _vmnet_run_cmd "--start"
      return $?
   elif [ $1 == "stop" ]; then
      _vmnet_run_cmd "--stop"
      return $?
   elif [ $1 == "restart" -o $1 == "reload" ]; then
      _vmnet_run_cmd "--stop"
      VMNET_CLI_ERROR=$?
      if [ $VMNET_CLI_ERROR -gt 0 ]; then
         echo "ERROR: 'vmnet-cli --stop' returned an error"
         return $VMNET_CLI_ERROR
      fi
      _vmnet_run_cmd "--start"
      return $?
   elif [ $1 == "status" ]; then
      _vmnet_run_cmd "--status"
      return $?
   elif [ $1 == "help" ]; then
      echo $VMNET_USAGE
      echo
      echo "   This shell function is a wrapper around VMware's 'vmnet-cli';"
      echo "   'vmnet-cli' controls VMware's virtual machine networking."
      echo "   To allow access to VMware virtual machines, edit the file"
      echo "   '/Library/Preferences/VMware Fusion/vmnet8/nat.conf';"
      echo "   make changes in sections '[incomingtcp]' and '[incomingudp]'"
      echo "   as desired.  Once you've completed your changes, issue"
      echo "   the command 'vmnet restart' in your shell, and enter your"
      echo "   password for SUDO, if prompted"
      return 0
   fi
}

# vim: set filetype=sh shiftwidth=3 tabstop=3:
